version: '3.9'

# Services
services:
  # Ngrok Service
  ngrok:
    image: wernight/ngrok:latest
    ports:
      - 4040:4040
    environment:
      NGROK_PROTOCOL: http
      NGROK_PORT: nginx:443
      NGROK_AUTH: ${NGROK_AUTH}
    depends_on:
      - nginx
      
  # Nginx Service
  nginx:
    build: ./.docker/nginx
    ports:
      - 80:80
      - 443:443
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    volumes:
      - ./src/project:/var/www/app
      - ./.docker/nginx/conf.d:/etc/nginx/conf.d
      - ./.docker/nginx/certs:/etc/nginx/certs
    depends_on:
      - app
      - node

  # Nodejs Service
  node:
    build: ./.docker/node
    ports:
      - '${VITE_PORT:-5173}:${VITE_PORT:-5173}'
    working_dir: /var/www/app
    volumes:
      - ./src/project:/var/www/app
    depends_on:
      - app

  # App Service
  app:
    build: ./.docker/app
    working_dir: /var/www/app
    volumes:
      - ./src/project:/var/www/app
      - ./.docker/app/init:/opt/files/init
      - ./.docker/nginx/certs:/usr/local/share/ca-certificates
    depends_on:
      mysql:
        condition: service_healthy

  # MySQL Service
  mysql:
    image: mysql/mysql-server:8.0
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: ghtest
      MYSQL_USER: dbadmin
      MYSQL_PASSWORD: boredtodeath
    ports:
      - 3306:3306
    volumes:
      - ./.docker/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - mysqldata:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u dbadmin --password=$$MYSQL_PASSWORD
      interval: 5s
      retries: 10

# Volumes
volumes:

  mysqldata: